---

- name: Create jenkins group for CI jobs to publish the website
  group: name=jenkins state=present gid=1001
- name: Create jenkins user for CI jobs to publish the website
  user: name=jenkins comment="Jenkins user" shell=/bin/bash state=present uid=1001 password_lock=true
- name: Ensure /home/jenkins/.ssh exists
  file: path=/home/jenkins/.ssh state=directory mode=0700 owner=jenkins group=jenkins
- name: Authorize an SSH keys for CI jobs to publish the website
  copy: src=authorized_keys dest=/home/jenkins/.ssh/authorized_keys mode=0600 owner=jenkins group=jenkins
  tags:
    - jenkins

# https://rpmfind.net/linux/rpm2html/search.php?query=python3dist(certbot-dns-cloudflare)
# https://docs.fedoraproject.org/en-US/epel/getting-started/#_el8
- name: Enable Extra Packages for Enterprise Linux
  dnf:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    state: latest
    # We're installing the package that contains the keys, so obviously we don't have them yet.
    # We're using HTTPS to retrieve the package, so this should be safe anyway.
    disable_gpg_check: true

- name: Install the latest version of Apache HTTPD, certbot using dnf
  dnf:
    name: ['httpd', 'mod_ssl', 'certbot', 'certbot-apache', 'python3-certbot-dns-cloudflare']
    state: latest

# https://certbot-dns-cloudflare.readthedocs.io/en/stable/
- name: Check if the certbot-cloudflare.ini config file exists
  stat:
    path: /etc/letsencrypt/certbot-cloudflare.ini
  register: certbot_cloudflare_config
- name: Fail if the certbot-cloudflare.ini config file does not exist
  fail:
    msg: You must create file /etc/letsencrypt/certbot-cloudflare.ini manually.
  when: not certbot_cloudflare_config.stat.exists
- name: Fix permissions of the certbot-cloudflare.ini config file
  file: path=/etc/letsencrypt/certbot-cloudflare.ini owner=root group=root mode=0600

  # Necessary for reverse proxies
- name: Allow HTTPD to open connections
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Make sure the example welcome page from HTTPD is removed
  file: path=/etc/httpd/conf.d/{{ item }} state=absent
  with_items:
    - autoindex.conf
    - userdir.conf
    - welcome.conf

- name: Add minimal, default index.html files
  copy: src={{ item }} dest=/var/www/ directory_mode=0755 mode=0600 owner=jenkins group=jenkins force=no
  with_fileglob:
    - "var/www/*/"

- name: Add Apache HTTPD VHosts with non-trivial config
  copy: src={{ item }} dest=/etc/httpd/conf.d/ mode=0600 owner=root
  with_fileglob:
    - "etc/httpd/002-in.relation.to.conf"
    - "etc/httpd/in.relation.to-*.confpart"
    - "etc/httpd/002-staging-in.relation.to.conf"
    - "etc/httpd/002-hibernate.org.conf"
    - "etc/httpd/hibernate.org-*.confpart"
    - "etc/httpd/002-staging-hibernate.org.conf"
    - "etc/httpd/002-forum.hibernate.org.conf"
    - "etc/httpd/002-www.hibernate.org.conf"
    - "etc/httpd/002-staging-beanvalidation.org.conf"
  notify:
    - Restart Apache HTTPD

- name: Add Apache HTTPD VHosts with only trivial redirection
  template:
    src: etc/httpd/redirect.conf
    dest: /etc/httpd/conf.d/{{ item.order | default('001') }}-{{ item.name }}.conf
    owner: root
    mode: 0600
  loop:
    - { name: 'relation.to', redirect: 'in.relation.to/', drop_path: false }
    - { name: 'blog.hibernate.org', redirect: 'in.relation.to/', drop_path: false, certificate: 'hibernate.org-0001' }
    - { name: 'nhibernate.org', redirect: 'hibernate.org/nhibernate.html', drop_path: true }
    # Note the '999-' file prefix is necessary for wildcard VHosts to not override non-wildcard subdomain VHosts.
    # Note Apache HTTPD only accepts wildcards in the "ServerAlias" directive, not in "ServerName".
    - { order: 999, name: 'wildcard.relation.to', alias: '*.relation.to', redirect: 'in.relation.to/', drop_path: false, certificate: 'relation.to-0001' }
    - { order: 999, name: 'wildcard.hibernate.org', alias: '*.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { order: 999, name: 'wildcard.nhibernate.org', alias: '*.nhibernate.org', redirect: 'hibernate.org/nhibernate.html', drop_path: true, certificate: 'nhibernate.org-0001' }
    # =======================================================================
    # DNS records for these domains were set up at some point, the reason is lost to history.
    # Regardless, we make sure they redirect to the proper place.
    - { name: 'annotations.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'core.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'ejb3.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'entitymanager.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'forums.hibernate.org', redirect: 'forum.hibernate.org/', drop_path: false, certificate: 'hibernate.org-0001' }
    - { name: 'jpa.hibernate.org', redirect: 'hibernate.org/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'ogm.hibernate.org', redirect: 'hibernate.org/ogm/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'search.hibernate.org', redirect: 'hibernate.org/search/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'others.hibernate.org', redirect: 'hibernate.org/others/', drop_path: true, certificate: 'hibernate.org-0001' }
    - { name: 'validator.hibernate.org', redirect: 'hibernate.org/validator/', drop_path: true, certificate: 'hibernate.org-0001' }
    # =======================================================================
  notify:
    - Restart Apache HTTPD

- name: Obtain certificates using Let's Encrypt (non-wildcards)
  shell: sudo certbot certonly -m admin+websites@hibernate.org --agree-tos --apache -d {{ item }}
  args:
    creates: /etc/letsencrypt/live/{{ item }}
  loop:
    - "relation.to"
    - "staging.in.relation.to"
    - "hibernate.org"
    - "nhibernate.org"
  notify:
    - Restart Apache HTTPD

# https://certbot-dns-cloudflare.readthedocs.io/en/stable/
- name: Obtain certificates using Let's Encrypt (wildcards)
  shell: sudo certbot certonly -m admin+websites@hibernate.org --agree-tos --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/certbot-cloudflare.ini -d {{ item.name }}
  args:
    creates: /etc/letsencrypt/live/{{ item.certificate }}
  loop:
    - { name: "\\*.relation.to", certificate: "relation.to-0001" }
    - { name: "\\*.hibernate.org", certificate: "relation.to-0001" }
    - { name: "\\*.nhibernate.org", certificate: "nhibernate.org-0001" }
  notify:
    - Restart Apache HTTPD

- name: Ensure Let's encrypt certificates get renewed
  cron:
    name: "Renew let's encrypt certificates"
    minute: "0"
    hour: "0,12"
    job: "python -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew"

- name: Ensure Apache HTTPD is started now, and again on startup
  service: name=httpd enabled=yes state=started
  tags:
    - staging
